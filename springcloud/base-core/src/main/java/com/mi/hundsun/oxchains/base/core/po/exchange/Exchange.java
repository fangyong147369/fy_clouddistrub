package com.mi.hundsun.oxchains.base.core.po.exchange;import com.fasterxml.jackson.annotation.JsonFormat;import com.mi.hundsun.oxchains.base.common.baseMapper.GenericPo;import lombok.Data;import lombok.EqualsAndHashCode;import io.swagger.annotations.ApiModel;import io.swagger.annotations.ApiModelProperty;import java.util.function.Consumer;import javax.persistence.Table;import javax.persistence.Transient;import  java.util.Map;import  java.util.Date;import  java.util.HashMap;import  com.alibaba.fastjson.annotation.JSONField;/** * 交易所管理实体信息<br> * * @author bin * @date   2018-04-16 05:39:41 */@Data@EqualsAndHashCode(callSuper = true)@ApiModel(description = "交易所管理")@Table(name = "exchange")public class Exchange extends GenericPo<Integer> {    public static final String TABLE_NAME = "exchange";		/**交易所编号**/	@ApiModelProperty(value = "交易所编号")	private String exNo;	/**交易所名称**/	@ApiModelProperty(value = "交易所名称")	private String name;	/**行情地址前缀**/	@ApiModelProperty(value = "行情地址前缀")	private String quoteUrl;	/**交易地址前缀**/	@ApiModelProperty(value = "交易地址前缀")	private String txUrl;	/**状态 1,启用:enable;0,停用:disable**/	@ApiModelProperty(value = "状态 1,启用:enable;0,停用:disable")	private Integer state;	@Transient	private String stateFormatter ;	/**停用时间**/	@ApiModelProperty(value = "停用时间")	@JSONField(format = "yyyy-MM-dd HH:mm:ss")	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")	private Date stopTime;	/**启用时间**/	@ApiModelProperty(value = "启用时间")	@JSONField(format = "yyyy-MM-dd HH:mm:ss")	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")	private Date enableTime;	public String getStateFormatter() {	    if(null == stateFormatter || "".equals(stateFormatter)){		    return STATE.getValue(getState());		}	    return this.stateFormatter;	}	public void setStateFormatter(String stateFormatter) {	    this.stateFormatter=stateFormatter;	}	/**1,启用:enable<br>0,停用:disable**/	public enum STATE {			/**1,启用:enable**/		ENABLE("启用",1),			/**0,停用:disable**/		DISABLE("停用",0);			public final int code;		public final String value;		private static Map<Integer, String> map = new HashMap<Integer, String>();			private STATE(String value, int code) {			this.code = code;			this.value = value;		}			public static String getValue(Integer code) {			if (null == code) {				return null;			}			for (STATE state : STATE.values()) {				if (state.code == code) { 					return state.value;				}			}			return null;		}			public static Integer getCode(String value) {			if (null == value  || "".equals(value)) {					return null;			}			for (STATE state : STATE.values()) {				if (state.value.equals(value)) { 					return state.code;				}			}			return null;		}			public static  Map<Integer, String> getEnumMap() {			if(map.size() == 0){				for (STATE state : STATE.values()) {					map.put(state.code,state.value);				}			}			return map;		}	}	    public Exchange(){}    public Exchange(Consumer<Exchange> consumer){    consumer.accept(this);    }}