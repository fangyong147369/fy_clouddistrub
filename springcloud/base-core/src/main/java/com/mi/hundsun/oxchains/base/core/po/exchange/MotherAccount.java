package com.mi.hundsun.oxchains.base.core.po.exchange;import com.fasterxml.jackson.annotation.JsonFormat;import com.mi.hundsun.oxchains.base.common.baseMapper.GenericPo;import lombok.Data;import lombok.EqualsAndHashCode;import io.swagger.annotations.ApiModel;import io.swagger.annotations.ApiModelProperty;import java.util.function.Consumer;import javax.persistence.Table;import javax.persistence.Transient;import  java.util.Map;import  java.util.Date;import  java.util.HashMap;import  com.alibaba.fastjson.annotation.JSONField;/** * 交易所母账号管理实体信息<br> * * @author bin * @date   2018-04-16 05:59:15 */@Data@EqualsAndHashCode(callSuper = true)@ApiModel(description = "交易所母账号管理")@Table(name = "ex_mother_account")public class MotherAccount extends GenericPo<Integer> {    public static final String TABLE_NAME = "ex_mother_account";		/**交易所ID**/	@ApiModelProperty(value = "交易所ID")	private Integer exId;	/**交易所编号**/	@ApiModelProperty(value = "交易所编号")	private String exNo;	/**母账号编号(系统生成)**/	@ApiModelProperty(value = "母账号编号(系统生成)")	private String accountNo;    /**账号ID(火币网专有)**/    @ApiModelProperty(value = "账号ID(火币网专有)")    private String accountId;	/**母账号名称**/	@ApiModelProperty(value = "母账号名称")	private String accountName;	/**母账号密码(加密保存)  待定**/	@ApiModelProperty(value = "母账号密码(加密保存)  待定")	private String accountPwd;	/**交易账户key -(调用接口需要用到的信息)**/	@ApiModelProperty(value = "交易账户key -(调用接口需要用到的信息)")	private String apiKey;    /**交易账户secret -(调用接口需要用到的信息)**/    @ApiModelProperty(value = "交易账户secret -(调用接口需要用到的信息)")    private String apiSecret;	/**Google私钥(加密保存)**/	@ApiModelProperty(value = "Google私钥(加密保存)")	private String googlePrivateKey;	/**母账号邮箱**/	@ApiModelProperty(value = "母账号邮箱")	private String accountEmail;	/**母账号手机号码**/	@ApiModelProperty(value = "母账号手机号码")	private String accountMobile;	/**状态 1,启用:enable;0,停用:disable**/	@ApiModelProperty(value = "状态 1,启用:enable;0,停用:disable")	private Integer state;	@Transient	private String stateFormatter ;	/**停用时间**/	@ApiModelProperty(value = "停用时间")	@JSONField(format="yyyy-MM-dd HH:mm:ss")	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")	private Date stopTime;	/**启用时间**/	@ApiModelProperty(value = "启用时间")	@JSONField(format="yyyy-MM-dd HH:mm:ss")	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")	private Date enableTime;	public String getStateFormatter() {	    if(null == stateFormatter || "".equals(stateFormatter)){		    return STATE.getValue(getState());		}	    return this.stateFormatter;	}	public void setStateFormatter(String stateFormatter) {	    this.stateFormatter=stateFormatter;	}	/**1,启用:enable<br>0,停用:disable**/	public enum STATE {			/**1,启用:enable**/		ENABLE("启用",1),			/**0,停用:disable**/		DISABLE("停用",0);			public final int code;		public final String value;		private static Map<Integer, String> map = new HashMap<Integer, String>();			private STATE(String value, int code) {			this.code = code;			this.value = value;		}			public static String getValue(Integer code) {			if (null == code) {				return null;			}			for (STATE state : STATE.values()) {				if (state.code == code) { 					return state.value;				}			}			return null;		}			public static Integer getCode(String value) {			if (null == value  || "".equals(value)) {					return null;			}			for (STATE state : STATE.values()) {				if (state.value.equals(value)) { 					return state.code;				}			}			return null;		}			public static  Map<Integer, String> getEnumMap() {			if(map.size() == 0){				for (STATE state : STATE.values()) {					map.put(state.code,state.value);				}			}			return map;		}	}	    public MotherAccount(){}    public MotherAccount(Consumer<MotherAccount> consumer){    consumer.accept(this);    }}